<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.
typedef struct{
 	int id;
	bool job;
}Sample;

Sample QueueToRobotSample; 
int SampleSize;

chan IncomingSample;
chan BrakeToQueue;
chan QueueToRobot;
chan QueueToJob;
chan JobToQueue;
chan RobotToScanner;
chan RobotToQueue;
chan ScannerToQueue;
chan ScannerToRobot;</declaration><template><name x="5" y="5">InputSystem</name><declaration>// Place local declarations here.
</declaration><location id="id0" x="16" y="-40"></location><init ref="id0"/></template><template><name>BrakeSystem</name><location id="id1" x="0" y="0"></location><init ref="id1"/></template><template><name>QueueSystem</name><location id="id2" x="-480" y="-232"></location><init ref="id2"/></template><template><name>RobotSystem</name><location id="id3" x="-1056" y="-488"><name x="-1112" y="-520">backToQueue</name></location><location id="id4" x="-616" y="-488"><name x="-632" y="-520">sampleProvided</name></location><location id="id5" x="-840" y="-488"><name x="-888" y="-520">samplePicked</name></location><location id="id6" x="-840" y="-360"><name x="-888" y="-352">initial</name></location><init ref="id6"/><transition><source ref="id5"/><target ref="id6"/><label kind="synchronisation" x="-816" y="-432">RobotToQueue!</label><nail x="-824" y="-424"/></transition><transition><source ref="id5"/><target ref="id3"/><label kind="guard" x="-1016" y="-464">job:=0</label><label kind="synchronisation" x="-1016" y="-480">RobotToQueue!</label></transition><transition><source ref="id5"/><target ref="id4"/><label kind="guard" x="-784" y="-464">SampleSize = 1</label><label kind="synchronisation" x="-784" y="-480">RobotToScanner!</label></transition><transition><source ref="id6"/><target ref="id5"/><label kind="guard" x="-968" y="-424">SampleSize = 0</label><label kind="synchronisation" x="-968" y="-440">QueueToRobot!</label><nail x="-856" y="-424"/></transition></template><template><name>ScannerSystem</name><location id="id7" x="0" y="0"></location><init ref="id7"/></template><template><name>JobSystem</name><location id="id8" x="0" y="0"></location><init ref="id8"/></template><system>// Place template instantiations here.
Process = Template();

// List one or more processes to be composed into a system.
system Process;</system></nta>