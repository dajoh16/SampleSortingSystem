<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
int count = 0;

clock GlobalClock;

int sorted = 0;
int rejected = 0;

typedef struct{
	bool job;
	bool scanned;
    bool validID;
    bool real;
}Sample;


const int N = 26; //Max 26 samples in queue

Sample QueueToRobotSample; 

Sample IncomingSample;


chan InputToBrake;
chan BrakeToQueue;


chan QueueToControllerRobotPickup;
chan QueueToControllerJobAvail;

chan RobotToControllerScan;
chan RobotToControllerJobAvail;
chan RobotToControllerSampleToQueue;

chan JobToControllerQueueJobAssigned;
chan JobToControllerRobotJobAssigned;

chan ScannerToControllerScanDone;


chan ControllerToQueueSampleReturned;
chan ControllerToQueueJobAssigned;

chan ControllerToRobotValidID;
chan ControllerToRobotInvalidID;
chan ControllerToRobotPickupFromQueue;
chan ControllerToRobotJob;
chan ControllerToRobotNoJob;

chan ControllerToJobQueueJobAvail;
chan ControllerToJobRobotJobAvail;

chan ControllerToScannerScanSample;


Sample ScannerSample;
Sample InputSample;
Sample BrakeSample;
Sample QueueSample;
Sample RobotSample;
Sample JobSample;
</declaration>
	<template>
		<name>ScannerSystem</name>
		<declaration>chan Validate;
clock ScannerClock;
void ValidateSampleID(){
    double x = random(100);
	ScannerSample.validID = (x &gt; 50);
    ScannerSample.scanned = true;
    
}
</declaration>
		<location id="id0" x="272" y="-25">
			<name x="289" y="-51">ValidateSample</name>
			<committed/>
		</location>
		<location id="id1" x="-85" y="-25">
			<name x="-133" y="-65">SampleReady</name>
			<label kind="invariant" x="-145" y="-8">ScannerClock &lt;= 500</label>
		</location>
		<location id="id2" x="-415" y="-25">
			<name x="-559" y="-41">WaitingForSample</name>
		</location>
		<location id="id3" x="85" y="-76">
		</location>
		<location id="id4" x="85" y="25">
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id4"/>
			<target ref="id0"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id0"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id3"/>
			<label kind="guard" x="-127" y="-127">ScannerClock &gt;= 250</label>
			<label kind="assignment" x="-127" y="-110">ScannerSample.validID = true,
ScannerSample.scanned = true</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id4"/>
			<label kind="guard" x="-76" y="25">ScannerClock &gt;= 250</label>
			<label kind="assignment" x="-76" y="42">ScannerSample.validID = false,
ScannerSample.scanned = true</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id2"/>
			<label kind="guard" x="-238" y="-178">ScannerSample.scanned == true</label>
			<label kind="synchronisation" x="-229" y="-153">ScannerToControllerScanDone!</label>
			<nail x="272" y="-127"/>
			<nail x="-417" y="-128"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-357" y="-51">ControllerToScannerScanSample?</label>
			<label kind="assignment" x="-348" y="-17">ScannerSample = RobotSample,
ScannerClock = 0</label>
		</transition>
	</template>
	<template>
		<name>ControllerSystem</name>
		<declaration>clock JobWaitingTime;</declaration>
		<location id="id5" x="-68" y="-59">
			<name x="-127" y="-102">Ready</name>
		</location>
		<location id="id6" x="-552" y="-144">
			<name x="-527" y="-178">QueueToRobot</name>
			<committed/>
		</location>
		<location id="id7" x="-425" y="17">
			<name x="-578" y="-8">RobotScanSample</name>
			<committed/>
		</location>
		<location id="id8" x="-68" y="-187">
			<name x="-212" y="-195">SampleScanned</name>
		</location>
		<location id="id9" x="-127" y="-289">
			<name x="-238" y="-306">SampleValid</name>
			<committed/>
		</location>
		<location id="id10" x="0" y="-289">
			<name x="17" y="-297">SampleInvalid</name>
			<committed/>
		</location>
		<location id="id11" x="-68" y="-442">
			<name x="-127" y="-484">ScanSampleReturned</name>
			<committed/>
		</location>
		<location id="id12" x="323" y="-93">
			<name x="263" y="-76">RobotIsJobAvailable</name>
			<committed/>
		</location>
		<location id="id13" x="646" y="-126">
			<name x="620" y="-161">WaitForJob</name>
			<label kind="invariant" x="578" y="-187">JobWaitingTime &lt; 3000</label>
		</location>
		<location id="id14" x="1020" y="-119">
			<name x="1010" y="-153">JobSystemTooSlow</name>
		</location>
		<location id="id15" x="841" y="-8">
			<committed/>
		</location>
		<location id="id16" x="799" y="102">
			<name x="816" y="102">Job</name>
			<committed/>
		</location>
		<location id="id17" x="901" y="102">
			<name x="926" y="93">NoJob</name>
			<committed/>
		</location>
		<location id="id18" x="331" y="127">
			<name x="321" y="93">RobotSampleToQueue</name>
			<committed/>
		</location>
		<location id="id19" x="8" y="212">
			<name x="42" y="204">QueueJobAvailable</name>
			<committed/>
		</location>
		<location id="id20" x="-323" y="178">
			<name x="-297" y="170">QueueJobAssigned</name>
			<committed/>
		</location>
		<init ref="id5"/>
		<transition>
			<source ref="id20"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-620" y="161">ControllerToQueueJobAssigned!</label>
			<nail x="-399" y="178"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id20"/>
			<label kind="synchronisation" x="-399" y="195">JobToControllerQueueJobAssigned?</label>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-187" y="263">ControllerToJobQueueJobAvail!</label>
			<nail x="-60" y="246"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id19"/>
			<label kind="synchronisation" x="8" y="161">QueueToControllerJobAvail?</label>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="288" y="178">ControllerToQueueSampleReturned!</label>
			<nail x="297" y="169"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id18"/>
			<label kind="synchronisation" x="356" y="118">RobotToControllerSampleToQueue?</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id15"/>
			<label kind="synchronisation" x="935" y="-59">JobToControllerRobotJobAssigned?</label>
			<label kind="assignment" x="918" y="-34">JobSample.job = false</label>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id5"/>
			<nail x="892" y="136"/>
			<nail x="841" y="153"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id5"/>
			<nail x="765" y="93"/>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id16"/>
			<label kind="guard" x="654" y="8">JobSample.job == true</label>
			<label kind="synchronisation" x="654" y="34">ControllerToRobotJob!</label>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id17"/>
			<label kind="guard" x="884" y="8">JobSample.job == false</label>
			<label kind="synchronisation" x="892" y="51">ControllerToRobotNoJob!</label>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id15"/>
			<label kind="synchronisation" x="476" y="-76">JobToControllerRobotJobAssigned?</label>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id14"/>
			<label kind="guard" x="773" y="-153">JobWaitingTime &gt;= 3000</label>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="357" y="-161">ControllerToJobRobotJobAvail!</label>
			<label kind="assignment" x="408" y="-136">JobWaitingTime = 0</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="59" y="-110">RobotToControllerJobAvail?</label>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id5"/>
			<nail x="221" y="-382"/>
			<nail x="229" y="-212"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="-17" y="-357">ControllerToRobotInvalidID!</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="-306" y="-374">ControllerToRobotValidID!</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id10"/>
			<label kind="guard" x="-17" y="-246">ScannerSample.validID == false</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="guard" x="-331" y="-272">ScannerSample.validID == true</label>
			<nail x="-110" y="-263"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-306" y="-153">ScannerToControllerScanDone?</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-637" y="59">ControllerToScannerScanSample!</label>
			<nail x="-399" y="60"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-408" y="-42">RobotToControllerScan?</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-816" y="-93">ControllerToRobotPickupFromQueue!</label>
			<nail x="-552" y="-76"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-773" y="-178">QueueToControllerRobotPickup?</label>
		</transition>
	</template>
	<template>
		<name x="5" y="5">InputSystem</name>
		<declaration>// Place local declarations here.
clock x;

Sample create() {
	Sample s1 = {false, false, false, true};
	return s1;
}

</declaration>
		<location id="id21" x="-994" y="-399">
			<name x="-1090" y="-407">SampleSend</name>
			<committed/>
		</location>
		<location id="id22" x="-994" y="-552">
			<name x="-1074" y="-576">InitSample</name>
			<label kind="invariant" x="-1084" y="-560">x&lt;=20000</label>
		</location>
		<init ref="id22"/>
		<transition>
			<source ref="id21"/>
			<target ref="id22"/>
			<nail x="-864" y="-400"/>
			<nail x="-864" y="-400"/>
			<nail x="-864" y="-552"/>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id21"/>
			<label kind="guard" x="-1144" y="-488">x&gt;=20000</label>
			<label kind="synchronisation" x="-1144" y="-504">InputToBrake!</label>
			<label kind="assignment" x="-1144" y="-472">x=0,
InputSample = create()</label>
		</transition>
	</template>
	<template>
		<name>BrakeSystem</name>
		<declaration>clock SampleBrake;
Sample CurrentSample;</declaration>
		<location id="id23" x="-272" y="-456">
			<name x="-282" y="-486">Error</name>
			<label kind="comments" x="-263" y="-416">Human intervention required</label>
		</location>
		<location id="id24" x="-272" y="-152">
			<name x="-256" y="-160">SampleInserted</name>
			<committed/>
		</location>
		<location id="id25" x="-272" y="-304">
			<name x="-264" y="-336">Brake</name>
			<label kind="invariant" x="-248" y="-312">SampleBrake &lt;= 1001</label>
		</location>
		<location id="id26" x="-720" y="-304">
			<name x="-768" y="-312">Start</name>
		</location>
		<init ref="id26"/>
		<transition>
			<source ref="id24"/>
			<target ref="id26"/>
			<nail x="-720" y="-152"/>
			<nail x="-720" y="-152"/>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id23"/>
			<label kind="guard" x="-255" y="-391">SampleBrake &gt; 1000</label>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id24"/>
			<label kind="guard" x="-263" y="-263">SampleBrake &lt;= 1000</label>
			<label kind="synchronisation" x="-264" y="-240">BrakeToQueue!</label>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id25"/>
			<label kind="synchronisation" x="-560" y="-336">InputToBrake?</label>
			<label kind="assignment" x="-560" y="-368">SampleBrake = 0,
BrakeSample = InputSample</label>
		</transition>
	</template>
	<template>
		<name>QueueSystem</name>
		<declaration>Sample list[N+1];
clock shiftTimer;
clock QueueClock;
// Shift Queue
void shift()
{
    int i = N;
    while(i &gt; 0)
    {
        if (i == N &amp;&amp; list[i].real == true)
        {
            rejected += 1;
        }
        list[i] = list[i - 1];

        i--;
    }
    list[0].real = false;
}


// Put an element at the end of the queue
void enqueue(Sample element)
{
    element.real = true;
    list[0] = element;
    shift();
}

// Returns the front element of the queue
Sample next()
{
    int i = N;
    Sample nextSample;

    while(i &gt;= 0)
    {
        if (list[i].real == true)
        {
          nextSample = list[i];  
        }
        i--;
    }
    return nextSample;
}

// Remove the front element of the queue
Sample dequeue()
{
    int i = N;
	Sample frontSample;
    while(i &gt;= 0)
    {
        if (list[i].real == true)
        {
            list[i].real = false;
            frontSample = list[i];
        }
        i--;
    }
	return frontSample;
}

int length()
{
    int i = N;
    int _len = 0;
    while(i &gt;= 0)
    {
        if (list[i].real == true)
        {
            _len++;
        }
        i--;
    }
    return _len;
}


</declaration>
		<location id="id27" x="-34" y="-17">
			<name x="-59" y="0">SampleToRobot</name>
			<committed/>
		</location>
		<location id="id28" x="212" y="-501">
			<name x="229" y="-510">SampleToJobSystem</name>
			<committed/>
		</location>
		<location id="id29" x="212" y="-229">
			<name x="234" y="-227">JobReceived</name>
			<committed/>
		</location>
		<location id="id30" x="-136" y="-612">
			<name x="-161" y="-654">Shift</name>
			<label kind="invariant" x="-127" y="-646">QueueClock &lt;= 200</label>
		</location>
		<location id="id31" x="-391" y="-136">
			<name x="-484" y="-136">QueueUp</name>
			<committed/>
		</location>
		<location id="id32" x="-144" y="-312">
			<name x="-153" y="-365">Ready</name>
			<label kind="invariant" x="-289" y="-323">shiftTimer &lt;= 5000</label>
		</location>
		<location id="id33" x="-425" y="-493">
			<name x="-435" y="-527">SampleReturned</name>
			<committed/>
		</location>
		<init ref="id32"/>
		<transition>
			<source ref="id33"/>
			<target ref="id32"/>
			<nail x="-289" y="-476"/>
		</transition>
		<transition>
			<source ref="id32"/>
			<target ref="id33"/>
			<label kind="synchronisation" x="-663" y="-450">ControllerToQueueSampleReturned?</label>
			<label kind="assignment" x="-569" y="-425">enqueue(RobotSample)</label>
			<nail x="-357" y="-391"/>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id32"/>
			<nail x="-144" y="-127"/>
		</transition>
		<transition>
			<source ref="id32"/>
			<target ref="id27"/>
			<label kind="guard" x="-17" y="-144">length() &gt; 0 &amp;&amp; (next().scanned == false || next().job == true)</label>
			<label kind="synchronisation" x="-17" y="-119">QueueToControllerRobotPickup!</label>
			<label kind="assignment" x="-17" y="-93">QueueSample = dequeue()</label>
			<nail x="-25" y="-170"/>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id32"/>
			<nail x="85" y="-221"/>
		</transition>
		<transition>
			<source ref="id32"/>
			<target ref="id29"/>
			<label kind="synchronisation" x="153" y="-314">ControllerToQueueJobAssigned?</label>
			<label kind="assignment" x="153" y="-297">enqueue(JobSample)</label>
			<nail x="102" y="-306"/>
		</transition>
		<transition>
			<source ref="id28"/>
			<target ref="id32"/>
			<nail x="144" y="-382"/>
		</transition>
		<transition>
			<source ref="id32"/>
			<target ref="id28"/>
			<label kind="guard" x="42" y="-586">next().scanned == true &amp;&amp; next().job == false</label>
			<label kind="synchronisation" x="42" y="-569">QueueToControllerJobAvail!</label>
			<label kind="assignment" x="42" y="-552">QueueSample = dequeue()</label>
			<nail x="51" y="-484"/>
		</transition>
		<transition>
			<source ref="id31"/>
			<target ref="id32"/>
			<nail x="-357" y="-238"/>
		</transition>
		<transition>
			<source ref="id32"/>
			<target ref="id31"/>
			<label kind="synchronisation" x="-348" y="-144">BrakeToQueue?</label>
			<label kind="assignment" x="-357" y="-127">enqueue(BrakeSample)</label>
			<nail x="-255" y="-170"/>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id32"/>
			<label kind="guard" x="-297" y="-586">QueueClock &gt;= 200</label>
			<label kind="assignment" x="-280" y="-569">shiftTimer = 0</label>
			<nail x="-195" y="-510"/>
		</transition>
		<transition>
			<source ref="id32"/>
			<target ref="id30"/>
			<label kind="guard" x="-76" y="-535">shiftTimer &gt;= 5000</label>
			<label kind="assignment" x="-76" y="-518">shift(),
QueueClock = 0</label>
			<nail x="-76" y="-510"/>
		</transition>
	</template>
	<template>
		<name>RobotSystem</name>
		<declaration>clock RobotClock;</declaration>
		<location id="id34" x="-1351" y="-484">
			<name x="-1453" y="-526">isJobAvailable</name>
		</location>
		<location id="id35" x="-399" y="-484">
			<name x="-374" y="-492">SampleProvided</name>
		</location>
		<location id="id36" x="-841" y="-484">
			<name x="-834" y="-472">SamplePicked</name>
		</location>
		<location id="id37" x="-833" y="-297">
			<name x="-824" y="-280">WaitingForSample</name>
		</location>
		<location id="id38" x="-1351" y="-297">
			<name x="-1394" y="-280">NoJobAvailable</name>
			<label kind="invariant" x="-1402" y="-263">RobotClock &lt;= 2000</label>
		</location>
		<location id="id39" x="-773" y="-399">
			<name x="-824" y="-433">SampleIDInvalid</name>
			<label kind="invariant" x="-765" y="-391">RobotClock &lt;= 2000</label>
		</location>
		<location id="id40" x="-1020" y="-714">
			<name x="-1198" y="-731">SampleSortedFromQueue</name>
			<label kind="invariant" x="-1164" y="-714">RobotClock &lt;= 3000</label>
		</location>
		<location id="id41" x="-1513" y="-348">
			<name x="-1683" y="-348">RobotHandledSample</name>
			<label kind="invariant" x="-1683" y="-331">RobotClock &lt;= 3000</label>
		</location>
		<location id="id42" x="-875" y="-399">
			<name x="-1003" y="-408">PickingUpSample</name>
			<label kind="invariant" x="-1020" y="-425">RobotClock &lt;= 2000</label>
		</location>
		<location id="id43" x="-629" y="-484">
			<name x="-688" y="-476">HomeToScanner</name>
			<label kind="invariant" x="-680" y="-459">RobotClock &lt;= 1000</label>
		</location>
		<location id="id44" x="-399" y="-637">
			<name x="-409" y="-671">ScannerToHome</name>
			<label kind="invariant" x="-442" y="-688">RobotClock &lt;= 1000</label>
		</location>
		<init ref="id37"/>
		<transition>
			<source ref="id44"/>
			<target ref="id36"/>
			<label kind="guard" x="-663" y="-663">RobotClock &gt; 500</label>
			<label kind="assignment" x="-782" y="-663">RobotClock = 0</label>
			<nail x="-841" y="-637"/>
		</transition>
		<transition>
			<source ref="id36"/>
			<target ref="id43"/>
			<label kind="guard" x="-824" y="-518">RobotSample.scanned == false</label>
			<label kind="assignment" x="-823" y="-484">RobotClock = 0</label>
		</transition>
		<transition>
			<source ref="id42"/>
			<target ref="id36"/>
			<label kind="guard" x="-994" y="-467">RobotClock &gt;= 1500</label>
		</transition>
		<transition>
			<source ref="id41"/>
			<target ref="id37"/>
			<label kind="guard" x="-1224" y="-204">RobotClock &gt;= 2000</label>
			<label kind="assignment" x="-1190" y="-221">sorted += 1</label>
			<nail x="-1513" y="-221"/>
			<nail x="-833" y="-221"/>
		</transition>
		<transition>
			<source ref="id34"/>
			<target ref="id41"/>
			<label kind="synchronisation" x="-1589" y="-467">ControllerToRobotJob?</label>
			<label kind="assignment" x="-1649" y="-442">RobotSample = JobSample,
RobotClock = 0</label>
		</transition>
		<transition>
			<source ref="id35"/>
			<target ref="id39"/>
			<label kind="synchronisation" x="-612" y="-425">ControllerToRobotInvalidID?</label>
			<label kind="assignment" x="-569" y="-399">RobotClock = 0</label>
			<nail x="-399" y="-399"/>
		</transition>
		<transition>
			<source ref="id40"/>
			<target ref="id37"/>
			<label kind="guard" x="-467" y="-289">RobotClock &gt;= 2000</label>
			<label kind="assignment" x="-450" y="-323">sorted += 1</label>
			<nail x="-952" y="-748"/>
			<nail x="-246" y="-748"/>
			<nail x="-246" y="-297"/>
		</transition>
		<transition>
			<source ref="id36"/>
			<target ref="id40"/>
			<label kind="guard" x="-969" y="-739">RobotSample.validID == true 
&amp;&amp; RobotSample.scanned == true
&amp;&amp; RobotSample.job == true</label>
			<label kind="assignment" x="-969" y="-680">RobotClock = 0</label>
		</transition>
		<transition>
			<source ref="id39"/>
			<target ref="id37"/>
			<label kind="guard" x="-765" y="-374">RobotClock &gt;= 2000</label>
			<label kind="assignment" x="-799" y="-348">rejected += 1</label>
		</transition>
		<transition>
			<source ref="id38"/>
			<target ref="id37"/>
			<label kind="guard" x="-1147" y="-297">RobotClock &gt;= 1500</label>
			<label kind="synchronisation" x="-1198" y="-280">RobotToControllerSampleToQueue!</label>
		</transition>
		<transition>
			<source ref="id34"/>
			<target ref="id38"/>
			<label kind="synchronisation" x="-1343" y="-425">ControllerToRobotNoJob?</label>
			<label kind="assignment" x="-1343" y="-399">RobotSample = JobSample,
RobotClock = 0</label>
		</transition>
		<transition>
			<source ref="id35"/>
			<target ref="id44"/>
			<label kind="synchronisation" x="-569" y="-569">ControllerToRobotValidID?</label>
			<label kind="assignment" x="-603" y="-603">RobotSample = ScannerSample,
RobotClock = 0</label>
		</transition>
		<transition>
			<source ref="id36"/>
			<target ref="id34"/>
			<label kind="guard" x="-1190" y="-578">RobotSample.validID == true 
&amp;&amp; RobotSample.scanned == true
&amp;&amp; RobotSample.job == false</label>
			<label kind="synchronisation" x="-1190" y="-603">RobotToControllerJobAvail!</label>
		</transition>
		<transition>
			<source ref="id43"/>
			<target ref="id35"/>
			<label kind="guard" x="-569" y="-510">RobotClock &gt; 500</label>
			<label kind="synchronisation" x="-586" y="-527">RobotToControllerScan!</label>
		</transition>
		<transition>
			<source ref="id37"/>
			<target ref="id42"/>
			<label kind="synchronisation" x="-1105" y="-365">ControllerToRobotPickupFromQueue?</label>
			<label kind="assignment" x="-1054" y="-348">RobotSample = QueueSample,
RobotClock = 0</label>
			<nail x="-875" y="-374"/>
		</transition>
	</template>
	<template>
		<name>JobSystem</name>
		<declaration>
bool FromQueue;
bool FromRobot;

void CheckJob(){
    double rnd = random(100);
	JobSample.job = (rnd &gt; 50);
    
}</declaration>
		<location id="id45" x="1037" y="-17">
			<name x="1062" y="-25">JobSent</name>
			<committed/>
		</location>
		<location id="id46" x="484" y="-51">
			<name x="450" y="-93">JobUnavailable</name>
			<committed/>
		</location>
		<location id="id47" x="654" y="-17">
			<name x="637" y="-59">JobSend</name>
			<committed/>
		</location>
		<location id="id48" x="288" y="0">
			<name x="256" y="-32">JobCheck</name>
		</location>
		<location id="id49" x="0" y="0">
			<name x="-85" y="-8">Ready</name>
		</location>
		<location id="id50" x="484" y="51">
			<name x="450" y="68">JobAvailable</name>
			<committed/>
		</location>
		<init ref="id49"/>
		<transition>
			<source ref="id50"/>
			<target ref="id47"/>
		</transition>
		<transition>
			<source ref="id46"/>
			<target ref="id47"/>
			<nail x="569" y="-34"/>
		</transition>
		<transition>
			<source ref="id47"/>
			<target ref="id45"/>
			<label kind="guard" x="773" y="42">FromRobot == true</label>
			<label kind="synchronisation" x="739" y="68">JobToControllerRobotJobAssigned!</label>
			<nail x="841" y="42"/>
		</transition>
		<transition>
			<source ref="id49"/>
			<target ref="id48"/>
			<label kind="synchronisation" x="34" y="59">ControllerToJobRobotJobAvail?</label>
			<label kind="assignment" x="42" y="76">JobSample = RobotSample,
FromRobot = true</label>
			<nail x="119" y="59"/>
		</transition>
		<transition>
			<source ref="id45"/>
			<target ref="id49"/>
			<label kind="assignment" x="454" y="145">FromQueue = false,
FromRobot = false</label>
			<nail x="1041" y="128"/>
			<nail x="0" y="136"/>
		</transition>
		<transition>
			<source ref="id47"/>
			<target ref="id45"/>
			<label kind="guard" x="773" y="-110">FromQueue == true</label>
			<label kind="synchronisation" x="731" y="-93">JobToControllerQueueJobAssigned!</label>
			<nail x="841" y="-68"/>
		</transition>
		<transition>
			<source ref="id48"/>
			<target ref="id46"/>
			<label kind="assignment" x="306" y="-68">JobSample.job = false</label>
		</transition>
		<transition>
			<source ref="id48"/>
			<target ref="id50"/>
			<label kind="assignment" x="289" y="34">JobSample.job = true</label>
			<nail x="391" y="25"/>
		</transition>
		<transition>
			<source ref="id49"/>
			<target ref="id48"/>
			<label kind="synchronisation" x="34" y="-110">ControllerToJobQueueJobAvail?</label>
			<label kind="assignment" x="42" y="-93">JobSample = QueueSample,
FromQueue = true</label>
			<nail x="119" y="-51"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

Input = InputSystem();
Brake = BrakeSystem();
Queue = QueueSystem();
Robot = RobotSystem();
Scanner = ScannerSystem();
Job = JobSystem();
Controller = ControllerSystem();

// List one or more processes to be composed into a system.
system Controller, Robot, Input, Brake, Queue, Scanner, Job;</system>
	<queries>
		<query>
			<formula>A&lt;&gt; Controller.Ready imply Job.Ready</formula>
			<comment>A path exists from the controller to the Job System</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Controller.Ready imply Scanner.WaitingForSample</formula>
			<comment>A path exists from the controller to the Scanner System</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Controller.Ready imply Robot.WaitingForSample</formula>
			<comment>A path exists from the controller to the Robot System</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Controller.Ready imply Queue.Ready</formula>
			<comment>A path exists from the controller to the Queue System</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Queue.Ready imply Job.JobAvailable</formula>
			<comment>There exists a way from queue to job available</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Queue.Ready imply Job.JobUnavailable</formula>
			<comment>There exists a path from queue to job unavailable</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Controller.Ready imply Controller.SampleInvalid</formula>
			<comment>There exists a path from Controller ready to sample invalid through scanner</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Controller.Ready imply Controller.SampleValid</formula>
			<comment>There exists a path from Controller ready to sample valid through scanner</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Controller.Ready and Job.JobAvailable imply Job.JobSent</formula>
			<comment>There exists a path to the job system from the controller</comment>
		</query>
		<query>
			<formula>E&lt;&gt; ((Input.InitSample) imply Brake.Start)</formula>
			<comment>There exists a path from the input system to the brake system</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Queue.Ready imply Robot.WaitingForSample</formula>
			<comment>There exists a path to the robot system from the queue system</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Robot.WaitingForSample imply Scanner.WaitingForSample</formula>
			<comment>There Exists a path to the scanner system from the robot system</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Robot.WaitingForSample imply Queue.Ready</formula>
			<comment>There exists a path to the queue from the robot</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Input.SampleSend and GlobalClock &lt;=20000</formula>
			<comment>it takes less then 20 seconds to send a sample</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Brake.Brake imply Brake.SampleInserted and Brake.SampleBrake &lt;= 1000</formula>
			<comment>If it has taken less than 1000 milliseconds to brake a sample then insert it into the queue</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Brake.Brake imply Brake.Error and Brake.SampleBrake &gt; 1000</formula>
			<comment>If it takes more than 1000 milliseconds to brake a sample then an error has occured and human intervention is required</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Queue.Shift and Queue.QueueClock &lt;= 200 imply Queue.Ready</formula>
			<comment>A shift takes 0.2 seconds</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Queue.Ready and Queue.shiftTimer &lt;= 5000 imply Queue.Shift</formula>
			<comment>The Queue shifts every 5 seconds.</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Queue.length() &lt;= 26</formula>
			<comment>The Queue must be able to contain 26 samples</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Queue.Ready imply Robot.SamplePicked</formula>
			<comment>The Queue system must be able to notify the robot that a sample must be picked up</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Scanner.SampleReady imply Robot.SampleIDInvalid</formula>
			<comment>If an alarm is returned by the Scanning system when scanning the sample, the robot must be able to reject the sample</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Robot.PickingUpSample imply Robot.SamplePicked and Robot.RobotClock &lt; 2000 and Robot.RobotClock &gt;= 1500</formula>
			<comment>Picking up a sample from the queue takes between 1.5 to 2 seconds</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Queue.Ready imply Robot.WaitingForSample</formula>
			<comment>There exists a path from the Queue system to the Robot system</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Queue.Ready imply Job.Ready</formula>
			<comment>There exists a path from the queue system to the job system</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Job.JobSent imply Queue.JobReceived</formula>
			<comment>There exists a path from the job system to the queue system</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Robot.SampleSortedFromQueue imply sorted &gt; 0 and Robot.WaitingForSample</formula>
			<comment>See if it is possible to sort samples</comment>
		</query>
		<query>
			<formula>E&lt;&gt; rejected &gt; 0</formula>
			<comment>See if it is possible to reject samples</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Queue.SampleToRobot imply Robot.SamplePicked</formula>
			<comment>there exists a path from the queue to the robot</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Robot.SamplePicked imply Scanner.SampleReady</formula>
			<comment>Does a path exist from the robot to the scanner system`?</comment>
		</query>
		<query>
			<formula>A&lt;&gt; (Controller.JobWaitingTime &gt; 3000 and Controller.RobotIsJobAvailable imply Controller.Ready)</formula>
			<comment>System doesn't freeze when job system takes longer than 3000 milliseconds</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Controller.JobWaitingTime &lt; 3000 and Controller.RobotIsJobAvailable imply sorted &gt; 0 and Controller.Ready</formula>
			<comment>It takes less than 3 seconds to fetcha job and sort the sample</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Scanner.SampleReady imply Scanner.ValidateSample</formula>
			<comment>Check if we can move from SampleReady to ValidateSample</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Robot.PickingUpSample imply Robot.SamplePicked and Robot.RobotClock &lt; 2000 and Robot.RobotClock &gt;= 1500</formula>
			<comment>Picking up a sample from the queue takes between 1.5 to 2 seconds</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Robot.SamplePicked imply Robot.SampleProvided and Robot.RobotClock &gt; 500 and Robot.RobotClock &lt;= 1000</formula>
			<comment>Moving a sample to the scanner takes between 0.5 to 1 second</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Robot.SampleSortedFromQueue imply sorted &gt; 0 and Robot.RobotClock &gt; 2000 and Robot.RobotClock &lt; 3000</formula>
			<comment>Sorting a sample takes between 2 - 3 seconds</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Controller.JobWaitingTime &lt; 3000 and Controller.RobotIsJobAvailable imply sorted &gt; 0 and Controller.Ready and Robot.RobotClock &gt; 2000 and Robot.RobotClock &lt; 3000</formula>
			<comment>Sorting a sample takes between 2 - 3 seconds</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Controller.JobWaitingTime &lt; 3000 and Robot.isJobAvailable imply Queue.SampleReturned and Robot.RobotClock &gt; 2000 and Robot.RobotClock &lt; 3000</formula>
			<comment>Sorting a sample takes between 2 - 3 seconds</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Robot.NoJobAvailable imply Queue.SampleReturned and Robot.RobotClock &lt; 2000 and Robot.RobotClock &gt;= 1500</formula>
			<comment>Putting a sample back into the queue takes 1.5 to 2 seconds</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Robot.SamplePicked</formula>
			<comment>Must be able to pick up a Sample from the queue system</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Robot.SampleProvided</formula>
			<comment>Must be able to provide a Sample to the Scanner System</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Robot.NoJobAvailable</formula>
			<comment>Must put back into the Queue System when there is no Job available for the sample</comment>
		</query>
		<query>
			<formula>E&lt;&gt; sorted &gt; 0</formula>
			<comment>Must be able to put a Sample into the final destination</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Robot.SampleIDInvalid</formula>
			<comment>Must be able to reject a Sample if the Scanner system returns an alarm</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Scanner.SampleReady imply Controller.SampleScanned and Scanner.ScannerClock &gt;= 250 and Scanner.ScannerClock &lt;= 500</formula>
			<comment>Provides a valid id to the samples that are received from the Robot System.</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Robot.SampleProvided and Robot.RobotClock &lt;= 2000 imply rejected &gt; 1</formula>
			<comment>Rejecting a sample takes 2 seconds</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Scanner.ValidateSample</formula>
			<comment>Must be able to scan a  sample</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Job.JobAvailable</formula>
			<comment>Checks if a job is available for the given sample</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Controller.JobWaitingTime &lt; 3000 and Controller.RobotIsJobAvailable imply sorted &gt; 0 and Controller.Ready</formula>
			<comment>If the sample is provided by the Robot System the Job System must respond within 3000 milliseconds. </comment>
		</query>
		<query>
			<formula>E&lt;&gt; Job.JobSent</formula>
			<comment>There exists a path to JobSent</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Brake.Brake</formula>
			<comment>There exists a path to the Brake</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Input.SampleSend</formula>
			<comment>There exists a path to SampleSend</comment>
		</query>
		<query>
			<formula>A[] ( 1 &gt; 0 )</formula>
			<comment>Test</comment>
		</query>
	</queries>
</nta>
