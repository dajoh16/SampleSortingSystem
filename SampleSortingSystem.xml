<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
int count = 0;


int sorted = 0;
int rejected = 0;

typedef struct{
 	int id;
	bool job;
	bool scanned;
    bool validID;
}Sample;


const int N = 26; //Max 26 samples in queue

Sample QueueToRobotSample; 

Sample IncomingSample;

int SampleSize;

chan InputToBrake;
chan BrakeToQueue;
chan QueueToRobot;
chan QueueToJob;
chan JobToQueue;
chan RobotToScanner;
chan RobotToQueue;
chan RobotToJob;
chan JobToRobot;
chan ScannerToQueue;
chan ScannerToRobot;

Sample ScannerSample;
Sample InputSample;
Sample BrakeSample;
Sample QueueSample;
Sample RobotSample;
Sample JobSample;
</declaration>
	<template>
		<name>ScannerSystem</name>
		<declaration>chan Validate;

void ValidateSampleID(){
	ScannerSample.validID = true;
    ScannerSample.scanned = true
    
}
</declaration>
		<location id="id0" x="408" y="-25">
		</location>
		<location id="id1" x="25" y="-25">
			<name x="-47" y="-65">ValidateSample</name>
		</location>
		<location id="id2" x="-161" y="-25">
			<name x="-209" y="-65">SampleReady</name>
			<urgent/>
		</location>
		<location id="id3" x="-415" y="-25">
			<name x="-559" y="-41">WaitingForSample</name>
		</location>
		<init ref="id3"/>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="68" y="-68">ScannerSample.scanned == true</label>
			<label kind="synchronisation" x="289" y="-68">ScannerToRobot!</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id3"/>
			<nail x="408" y="-153"/>
			<nail x="-415" y="-145"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="assignment" x="-136" y="-8">ValidateSampleID()</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-391" y="-57">RobotToScanner?</label>
			<label kind="assignment" x="-399" y="-8">ScannerSample = Robotsample</label>
		</transition>
	</template>
	<template>
		<name x="5" y="5">InputSystem</name>
		<declaration>// Place local declarations here.
clock x;

Sample create() {
	Sample s1 = {count, false, false, false};
	return s1;
}

</declaration>
		<location id="id4" x="-992" y="-400">
			<name x="-1088" y="-408">SampleSend</name>
		</location>
		<location id="id5" x="-992" y="-552">
			<name x="-1072" y="-576">InitSample</name>
			<label kind="invariant" x="-1048" y="-560">x&lt;=20</label>
		</location>
		<init ref="id5"/>
		<transition>
			<source ref="id4"/>
			<target ref="id5"/>
			<nail x="-864" y="-400"/>
			<nail x="-864" y="-400"/>
			<nail x="-864" y="-552"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id4"/>
			<label kind="guard" x="-1144" y="-488">x&gt;=20</label>
			<label kind="synchronisation" x="-1144" y="-504">InputToBrake!</label>
			<label kind="assignment" x="-1144" y="-472">x=0,
InputSample = create()</label>
		</transition>
	</template>
	<template>
		<name>BrakeSystem</name>
		<declaration>clock SampleBrake;
Sample CurrentSample;</declaration>
		<location id="id6" x="-272" y="-456">
			<name x="-282" y="-486">Error</name>
			<label kind="comments" x="-263" y="-416">Human intervention required</label>
		</location>
		<location id="id7" x="-272" y="-152">
			<name x="-256" y="-160">SampleInserted</name>
		</location>
		<location id="id8" x="-272" y="-304">
			<name x="-264" y="-336">Break</name>
			<label kind="invariant" x="-248" y="-312">SampleBrake &lt;= 1</label>
		</location>
		<location id="id9" x="-720" y="-304">
			<name x="-768" y="-312">Start</name>
		</location>
		<init ref="id9"/>
		<transition>
			<source ref="id7"/>
			<target ref="id9"/>
			<nail x="-720" y="-152"/>
			<nail x="-720" y="-152"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id6"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-264" y="-240">BrakeToQueue!</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-560" y="-336">InputToBrake?</label>
			<label kind="assignment" x="-560" y="-368">SampleBrake = 0,
BrakeSample = InputSample</label>
		</transition>
	</template>
	<template>
		<name>QueueSystem</name>
		<declaration>Sample list[N+1];
int[0,N] len;
Sample frontSample;

// Put an element at the end of the queue
void enqueue(Sample element)
{
    
    list[len++] = element;
}

// Returns the front element of the queue
Sample front()
{
   return list[0];
}

// Remove the front element of the queue
Sample dequeue()
{
        int i = 0;
        len -= 1;
	frontSample = front();
        while (i &lt; len)
        {
                list[i] = list[i + 1];
                i++;
        }
	return frontSample;
}



// Returns the last element of the queue
Sample tail()
{
   return list[len - 1];
}</declaration>
		<location id="id10" x="-24" y="-16">
			<name x="-40" y="0">SampleToRobot</name>
		</location>
		<location id="id11" x="360" y="-432">
			<name x="376" y="-456">SampleToJobSystem</name>
		</location>
		<location id="id12" x="216" y="-248">
			<name x="224" y="-280">JobReceived</name>
		</location>
		<location id="id13" x="-472" y="-312">
			<name x="-568" y="-344">IdentifySample</name>
		</location>
		<location id="id14" x="-104" y="-504">
			<name x="-96" y="-536">Reject</name>
		</location>
		<location id="id15" x="-400" y="-144">
			<name x="-392" y="-136">QueueUp</name>
		</location>
		<location id="id16" x="-144" y="-312">
			<name x="-256" y="-496">Ready</name>
		</location>
		<location id="id17" x="-382" y="-501">
			<name x="-392" y="-535">SampleReturned</name>
		</location>
		<init ref="id16"/>
		<transition>
			<source ref="id17"/>
			<target ref="id16"/>
			<nail x="-221" y="-433"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id17"/>
			<label kind="synchronisation" x="-416" y="-416">RobotToQueue?</label>
			<label kind="assignment" x="-501" y="-459">enqueue(RobotSample)</label>
			<nail x="-341" y="-431"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id16"/>
			<nail x="-128" y="-152"/>
			<nail x="-136" y="-272"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id10"/>
			<label kind="guard" x="17" y="-187">len &gt; 0 &amp;&amp; (front().scanned == false || front().job == true)</label>
			<label kind="synchronisation" x="25" y="-127">QueueToRobot!</label>
			<label kind="assignment" x="8" y="-76">QueueSample = dequeue()</label>
			<nail x="-8" y="-232"/>
			<nail x="17" y="-110"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id16"/>
			<nail x="104" y="-232"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="72" y="-344">JobToQueue?</label>
			<nail x="152" y="-312"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id16"/>
			<nail x="184" y="-368"/>
			<nail x="112" y="-360"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id11"/>
			<label kind="guard" x="-88" y="-480">front().scanned == true</label>
			<label kind="synchronisation" x="64" y="-504">QueueToJob!</label>
			<label kind="assignment" x="160" y="-480">QueueSample = front()</label>
			<nail x="72" y="-448"/>
			<nail x="128" y="-448"/>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id16"/>
			<nail x="-352" y="-224"/>
			<nail x="-264" y="-256"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id16"/>
			<nail x="-360" y="-296"/>
			<nail x="-256" y="-296"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-399" y="-374">ScannerToQueue?</label>
			<nail x="-192" y="-328"/>
			<nail x="-352" y="-352"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id15"/>
			<label kind="synchronisation" x="-272" y="-192">BrakeToQueue?</label>
			<label kind="assignment" x="-304" y="-168">enqueue(BrakeSample)</label>
			<nail x="-192" y="-248"/>
			<nail x="-224" y="-208"/>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id16"/>
			<nail x="-120" y="-528"/>
			<nail x="-144" y="-528"/>
			<nail x="-168" y="-520"/>
			<nail x="-200" y="-504"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id14"/>
		</transition>
	</template>
	<template>
		<name>RobotSystem</name>
		<location id="id18" x="-1343" y="-493">
			<name x="-1399" y="-525">isJobAvailable</name>
		</location>
		<location id="id19" x="-399" y="-493">
			<name x="-425" y="-476">sampleProvided</name>
		</location>
		<location id="id20" x="-840" y="-488">
			<name x="-816" y="-476">samplePicked</name>
		</location>
		<location id="id21" x="-833" y="-297">
			<name x="-881" y="-289">initial</name>
		</location>
		<location id="id22" x="-1351" y="-365">
		</location>
		<init ref="id21"/>
		<transition>
			<source ref="id22"/>
			<target ref="id21"/>
			<label kind="guard" x="-1309" y="-331">RobotSample.Job == false</label>
			<label kind="synchronisation" x="-1122" y="-323">RobotToQueue!</label>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id21"/>
			<label kind="guard" x="-1334" y="-263">RobotSample.Job == true</label>
			<label kind="assignment" x="-1156" y="-255">sorted += 1</label>
			<nail x="-1351" y="-221"/>
			<nail x="-833" y="-229"/>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id22"/>
			<label kind="synchronisation" x="-1343" y="-467">JobToRobot?</label>
			<label kind="assignment" x="-1334" y="-433">RobotSample = JobSample</label>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id20"/>
			<label kind="synchronisation" x="-654" y="-680">ScannerToRobot?</label>
			<label kind="assignment" x="-714" y="-646">RobotSample = ScannerSample</label>
			<nail x="-399" y="-654"/>
			<nail x="-841" y="-654"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id21"/>
			<label kind="guard" x="-782" y="-408">RobotSample.scanned == true &amp;&amp; RobotSample.validID == false</label>
			<label kind="assignment" x="-790" y="-374">rejected += 1</label>
			<nail x="-790" y="-408"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id18"/>
			<label kind="guard" x="-1266" y="-535">RobotSample.validID == true &amp;&amp; RobotSample.scanned == true</label>
			<label kind="synchronisation" x="-1156" y="-561">RobotToJob!</label>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id19"/>
			<label kind="guard" x="-782" y="-528">SampleSize == 1 &amp;&amp; RobotSample.scanned == false</label>
			<label kind="synchronisation" x="-680" y="-544">RobotToScanner!</label>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id20"/>
			<label kind="guard" x="-1003" y="-416">SampleSize == 0</label>
			<label kind="synchronisation" x="-994" y="-450">QueueToRobot?</label>
			<label kind="assignment" x="-1045" y="-391">RobotSample = QueueSample,
SampleSize == 1</label>
			<nail x="-856" y="-424"/>
		</transition>
	</template>
	<template>
		<name>JobSystem</name>
		<declaration>clock x;</declaration>
		<location id="id23" x="484" y="170">
			<name x="492" y="186">JobSend</name>
		</location>
		<location id="id24" x="488" y="0">
			<name x="456" y="16">JobUnavailable</name>
		</location>
		<location id="id25" x="488" y="0">
		</location>
		<location id="id26" x="289" y="170">
			<name x="265" y="186">JobAvailable</name>
			<label kind="invariant" x="281" y="202">x&lt;3</label>
		</location>
		<location id="id27" x="288" y="0">
			<name x="256" y="-32">JobCheck</name>
		</location>
		<location id="id28" x="0" y="0">
			<name x="-56" y="-8">Ready</name>
		</location>
		<init ref="id28"/>
		<transition>
			<source ref="id25"/>
			<target ref="id28"/>
			<nail x="488" y="-88"/>
			<nail x="0" y="-88"/>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id28"/>
			<nail x="484" y="246"/>
			<nail x="484" y="246"/>
			<nail x="-4" y="246"/>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id23"/>
			<label kind="guard" x="360" y="144">x&gt;=3</label>
			<label kind="synchronisation" x="328" y="128">JobToQueue!</label>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id24"/>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id26"/>
		</transition>
		<transition>
			<source ref="id28"/>
			<target ref="id27"/>
			<label kind="synchronisation" x="88" y="-24">QueueToJob?</label>
		</transition>
	</template>
	<system>// Place template instantiations here.

Input = InputSystem();
Brake = BrakeSystem();
Queue = QueueSystem();
// List one or more processes to be composed into a system.
system Input, Brake, Queue;</system>
	<queries>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
	</queries>
</nta>
